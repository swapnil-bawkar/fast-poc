{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/containers/dashboard/dashboard.component.ts","webpack:///src/app/containers/node-red/node-red.component.ts","webpack:///src/app/material/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","Object","freeze","path","component","title","iconConfig","icon","type","loadChildren","m","GraphModule","AgGridDemoModule","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","AppModule","instrument","maxAge","logOnly","production","DashboardComponent","NodeRedComponent","MaterialModule","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NodeRedComponent } from './containers/node-red/node-red.component';\nimport { DashboardComponent } from './containers/dashboard/dashboard.component';\n\nexport const routes: any = Object.freeze([\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    title: 'Dashboard',\n    iconConfig: { icon: 'dashboard', type: 'icon' },\n  },\n  {\n    path: 'node-red',\n    component: NodeRedComponent,\n    title: 'NodeRed',\n    iconConfig: { icon: 'node-red', type: 'svg' },\n  },\n  {\n    path: 'graph-editor',\n    loadChildren: () =>\n      import('./graph/graph.module').then((m) => m.GraphModule),\n    title: 'Mermaid Editor',\n    iconConfig: { icon: 'dashboard', type: 'icon' },\n  },\n  {\n    path: 'grid-demo',\n    loadChildren: () =>\n      import('./ag-grid/ag-grid.module').then((m) => m.AgGridDemoModule),\n    title: 'Ag Grid Demo',\n    iconConfig: { icon: 'dashboard', type: 'icon' },\n  },\n  {\n    path: '',\n    redirectTo: '/grid-demo',\n    pathMatch: 'full',\n  },\n]);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { routes } from './app-routing.module';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'node-red-poc';\n  routes = routes;\n\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\n    this.matIconRegistry.addSvgIcon(\n      'node-red',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/node-red.svg')\n    );\n  }\n}\n","<div class=\"app-container\" fxFlex fxLayout=\"column\">\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button (click)=\"snav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <h1 class=\"app-name\">FAST</h1>\n  </mat-toolbar>\n\n  <mat-sidenav-container fxFlex>\n    <mat-sidenav #snav [fixedInViewport]=\"false\">\n      <mat-nav-list *ngFor=\"let route of routes\">\n        <a\n          mat-list-item\n          *ngIf=\"route.path\"\n          [routerLink]=\"route.path\"\n          (click)=\"snav.toggle()\"\n        >\n          <mat-icon\n            *ngIf=\"route.iconConfig.type === 'svg'\"\n            [svgIcon]=\"route.iconConfig.icon\"\n            aria-hidden=\"false\"\n            class=\"side-nav-link-icon\"\n          >\n          </mat-icon>\n          <mat-icon\n            *ngIf=\"route.iconConfig.type === 'icon'\"\n            aria-hidden=\"false\"\n            class=\"side-nav-link-icon\"\n            >{{ route.iconConfig.icon }}\n          </mat-icon>\n          {{ route.title }}\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content fxFlex fxLayout=\"column\">\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MaterialModule,\n    HttpClientModule,\n    StoreModule.forRoot({}, {}),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  template: `\r\n    Dashboard Page!\r\n  `,\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-node-red',\r\n  template: `\r\n    <iframe fxFlex src=\"http://localhost:8000/red\" class=\"iframe\"></iframe>\r\n  `,\r\n  styleUrls: ['./node-red.component.scss']\r\n})\r\nexport class NodeRedComponent {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    FlexLayoutModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}